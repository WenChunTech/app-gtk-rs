name: CI
# Workflow file for windows
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
jobs:
  job:
    name: ${{ matrix.os }}-build
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest]
        include:
          - build: windows
            os: windows-latest
            rust: nightly-x86_64-msvc
            target: x86_64-pc-windows-msvc
            archive-name: sgf-render-windows.7z
    env:
      VCPKG_ROOT: "${{ github.workspace }}/vcpkg"
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursiv

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          profile: minimal
          override: true
          target: ${{ matrix.target }}

      - name: Restore vcpkg and its artifacts.
        uses: actions/cache@v2
        id: vcpkg-cache
        with:
          path: |
            ${{ env.VCPKG_ROOT }}
            ${{ github.workspace }}/build/vcpkg_installed
            !${{ env.VCPKG_ROOT }}/.git
            !${{ env.VCPKG_ROOT }}/buildtrees
            !${{ env.VCPKG_ROOT }}/packages
            !${{ env.VCPKG_ROOT }}/downloads
          key: |
            ${{ hashFiles( 'Cargo.lock' ) }}-${{ runner.os }}-cache-key-v1
      - name: Get vcpkg(windows)
        if: ${{ runner.os == 'Windows' && steps.vcpkg-cache.outputs.cache-hit != 'true' }}

        env:
          VCPKGDIR: "${{ github.workspace }}/vcpkg"
          PKG_CONFIG_PATH: %VCPKGDIR%\installed\x64-windows\lib\pkgconfig
          GTK_LIB_DIR: %VCPKGDIR%\installed\x64-windows\lib

        run: |
          cd ${{ github.workspace }}
          mkdir build -force
          git clone https://github.com/Microsoft/vcpkg.git
          cd vcpkg
          .\bootstrap-vcpkg.bat
          .\vcpkg install gtk --triplet x64-windows
          cd ${{ github.workspace }}
          cargo build --release
