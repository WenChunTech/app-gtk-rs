name: CI
# Workflow file for windows
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
jobs:
  Windows:
    runs-on: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Restore vcpkg and GTK environment
        uses: actions/cache@v2
        id: vcpkg-cache
        env:
          VCPKG_ROOT: "${{ github.workspace }}/vcpkg"
        with:
          path: |
            ${{ env.VCPKG_ROOT }}
            ${{ github.workspace }}\build\vcpkg_installed
            ${{ env.VCPKG_ROOT }}\.git
            ${{ env.VCPKG_ROOT }}\buildtrees
            ${{ env.VCPKG_ROOT }}\packages
            ${{ env.VCPKG_ROOT }}\downloads
            ${{ github.workspace }}\target
          key: |
            ${{ hashFiles( 'Cargo.toml' ) }}-${{ runner.os }}-cache-key-v1

      - name: Install vcpkg for windows
        if: ${{ runner.os == 'Windows' && steps.vcpkg-cache.outputs.cache-hit != 'true' }}
        run: |
          cd ${{ github.workspace }}
          mkdir build -force
          git clone https://github.com/Microsoft/vcpkg.git
          cd vcpkg
          .\bootstrap-vcpkg.bat
          .\vcpkg install gtk --triplet x64-windows

      - name: Build GTK App for Windows
        shell: powershell
        run: |
          wget -Uri "https://udomain.dl.sourceforge.net/project/pkgconfiglite/0.28-1/pkg-config-lite-0.28-1_bin-win32.zip" -OutFile "pkg-config.zip"
          Expand-Archive -Path .\pkg-config.zip -DestinationPath .
          pkg-config --version

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Build
        shell: cmd
        run: |
           set VCPKG_ROOT=${{ github.workspace }}\vcpkg
           set PKG_CONFIG_PATH=%VCPKG_ROOT%\installed\x64-windows\lib\pkgconfig
           set GTK_LIB_DIR=%VCPKG_ROOT%\installed\x64-windows\lib
           set PATH=${{ github.workspace }}\pkg-config-lite-0.28-1\bin;%VCPKG_ROOT%\installed\x64-windows\lib\pkgconfig;%VCPKG_ROOT%\installed\x64-windows\lib;%VCPKG_ROOT%\installed\x64-windows\bin;%PATH%;
           pkg-config --version
           cargo build --release

  MacOS:
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Rust for MacOS
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Install GTK4 for MacOS
        run: brew install gtk4

      - name: build gtk app for macos
        run: cargo build --release

      # - name: Create Release
      #   id: create_release
      #   uses: actions/create-release@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     tag_name: ${{ github.ref }}
      #     release_name: ${{ github.ref }}
      #     draft: false
      #     prerelease: false

      # - name: Upload Release Asset
      #   id: upload-release-asset
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}
      #     asset_path: ./target/release/mac-release.zip
      #     asset_name: macos-release.zip
      #     asset_content_type: application/zip
